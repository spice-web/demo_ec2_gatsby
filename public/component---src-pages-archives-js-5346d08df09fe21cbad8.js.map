{"version":3,"file":"component---src-pages-archives-js-5346d08df09fe21cbad8.js","mappings":"6LA4BA,MAzBkB,IAAmB,IAAlB,SAAEA,GAAU,EAC7B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAW5B,OACE,gCACGD,EAAKE,QAAQC,MAAMC,KAAI,CAACC,EAAMC,IAE3B,gCACE,wBAAMC,KAAK,YAAYC,QAASH,EAAKI,KAAKC,eAI/C,ECZP,SAASC,EAAI,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEd,GAAU,EAC3C,MAAM,KAAEe,IAASb,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBH,GAAeE,EAAKE,aAAaJ,YACnDK,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBH,MAExC,OACE,gCACE,6BAAQI,EAAkBJ,EAAK,MAAMI,EAAiBJ,GACtD,wBAAMN,KAAK,cAAcC,QAASO,IAClC,wBAAMG,SAAS,WAAWV,QAASK,IACnC,wBAAMK,SAAS,iBAAiBV,QAASO,IACzC,wBAAMG,SAAS,UAAUV,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAM,EAAKE,oBAAY,aAAjB,EAAmBG,SAAM,KAC/D,wBAAMZ,KAAK,gBAAgBC,QAASK,IACpC,wBAAMN,KAAK,sBAAsBC,QAASO,IAC1C,wBAAMR,KAAK,SAASC,QAAQ,YAC5B,gBAAC,EAAS,MACTT,EAGP,CAEAY,EAAIS,aAAe,CACjBC,KAAK,KACLC,KAAM,GACNV,YAAY,IAQd,O,yECvCA,UAdqB,QAAC,KAAEZ,GAAM,SAC5B,gBAAC,IAAM,KACL,gBAAC,IAAG,CAACa,MAAM,SACX,oCACA,0BACGb,EAAKuB,uBAAuBC,MAAMpB,KAAIqB,GACrC,sBAAIC,IAAKD,EAAKE,UACZ,gBAAC,EAAAC,KAAI,CAACC,GAAE,gBAAkBJ,EAAKE,UAAaF,EAAKE,cAIhD,C","sources":["webpack://gatsby-starter-default/./src/components/thumbnail.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/archives.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Thumbnail = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allFile(filter: { name: { eq: \"option001\" } }) {\r\n        edges {\r\n          node {\r\n            publicURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <>\r\n      {data.allFile.edges.map((file, index) => {\r\n        return (\r\n          <>\r\n            <meta name=\"thumbnail\" content={file.node.publicURL}></meta>\r\n          </>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Thumbnail\r\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Thumbnail from \"./thumbnail\"\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"robots\" content=\"noindex\" />\n      <Thumbnail />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  lang: `ja`, // lang: `en` → `ja` に変更\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst ArchivesPage = ({ data }) => (\r\n  <Layout>\r\n    <Seo title=\"Home\" />\r\n    <p>カテゴリー一覧</p>\r\n    <ul>\r\n      {data.allMicrocmsInformation.group.map(cate => (\r\n        <li key={cate.distinct}>\r\n          <Link to={`/information/${cate.distinct}`}>{cate.distinct}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n)\r\n\r\nexport default ArchivesPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMicrocmsInformation {\r\n      group(field: {category: {id: SELECT}}) {\r\n        totalCount\r\n        distinct(field: {category: {id: SELECT}})\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n"],"names":["children","data","useStaticQuery","allFile","edges","map","file","index","name","content","node","publicURL","Seo","description","title","site","metaDescription","siteMetadata","defaultTitle","property","author","defaultProps","lang","meta","allMicrocmsInformation","group","cate","key","distinct","Link","to"],"sourceRoot":""}