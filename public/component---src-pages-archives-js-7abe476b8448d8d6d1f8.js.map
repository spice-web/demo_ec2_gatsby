{"version":3,"file":"component---src-pages-archives-js-7abe476b8448d8d6d1f8.js","mappings":"6JAWA,SAASA,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzBC,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAN,MAAiBM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAN,EAAKG,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EAGN,CAEDH,EAAIa,aAAe,CACjBC,KAAK,KACLC,KAAM,GACNd,YAAY,IAQd,K,0ECpCA,UAdqB,SAAC,GAAD,IAAGe,EAAH,EAAGA,KAAH,OACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKd,MAAM,SACX,oCACA,0BACGc,EAAKC,uBAAuBC,MAAMC,KAAI,SAAAC,GAAI,OACzC,sBAAIC,IAAKD,EAAKE,UACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAE,gBAAkBJ,EAAKE,UAAaF,EAAKE,UAFV,KAL5B,C","sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/archives.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  lang: `ja`, // lang: `en` → `ja` に変更\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst ArchivesPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <p>カテゴリー一覧</p>\r\n    <ul>\r\n      {data.allMicrocmsInformation.group.map(cate => (\r\n        <li key={cate.distinct}>\r\n          <Link to={`/information/${cate.distinct}`}>{cate.distinct}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n)\r\n\r\nexport default ArchivesPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMicrocmsInformation {\r\n      group(field: category___id) {\r\n        totalCount\r\n        distinct(field: category___id)\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n"],"names":["Seo","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","lang","meta","data","allMicrocmsInformation","group","map","cate","key","distinct","Link","to"],"sourceRoot":""}