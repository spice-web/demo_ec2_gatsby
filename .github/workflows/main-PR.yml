# This is a basic workflow to help you get started with Actions

name: PR Deploy to Amazon

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  pull_request:
    branches: [main]
    types: [closed]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout main
        uses: actions/checkout@v2
        with:
          ref: main

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: install modules
        run: npm install

      - name: build gatsby
        run: |
          npm run build
        env:
          GATSBY_GOOGLE_MAP_API_KEY: ${{ secrets.GATSBY_GOOGLE_MAP_API_KEY }}
          GATSBY_SENDGRID_APIKEY: ${{ secrets.GATSBY_SENDGRID_APIKEY }}
          GATSBY_SENDGRID_USERNAME: ${{ secrets.GATSBY_SENDGRID_USERNAME }}
          MICROCMS_APIKEY: ${{ secrets.MICROCMS_APIKEY }}
          MICROCMS_SERVICE_ID: ${{ secrets.MICROCMS_SERVICE_ID }}
          GATSBY_FLEXYFORM_ACTION: ${{ secrets.GATSBY_FLEXYFORM_ACTION }}
          GATSBY_SMTP_USERNAME: ${{ secrets.GATSBY_SMTP_USERNAME }}
          GATSBY_SMTP_API_KEY: ${{ secrets.GATSBY_SMTP_API_KEY }}
          GATSBY_GOOGLE_TAG_MANAGER: ${{ secrets.GATSBY_GOOGLE_TAG_MANAGER }}

      - name: commit main Branch

        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git checkout main
          git add .
          git commit -m "OK!pull request"
          git push origin main

      # IP取得ライブラリをインストール
      - name: Public IP Install
        id: ip
        uses: haythem/public-ip@v1.2

      # - name: checkout
      #   uses: actions/checkout@v2

      # AWS CLIをインストールする
      - name: AWS CLI install
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # AWS CLIにキーを設定をする
      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # デプロイする
      - name: Deploy
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          echo "${{ secrets.GIT_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          ssh -A -o StrictHostKeyChecking=no ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }} -i private_key "cd /var/www/html/data && git config pull.rebase false && git fetch --prune && git checkout main && git pull origin main"
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --ip-permissions IpProtocol=tcp,FromPort=22,ToPort=22,IpRanges='[{CidrIp=${{ steps.ip.outputs.ipv4 }}/32}]'
